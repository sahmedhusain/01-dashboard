import{r as m,R as de,j as e,m as x}from"./animation-vendor-BWQ_wUI_.js";import{C as J}from"./Card-boLi8-L0.js";import{L as me,A as he,b as ue}from"./index-C4FaYD6o.js";import{G as xe,a as be,b as ge}from"./allQueries-C1LmK1xE.js";import{T as B,U as F,v as pe,p as K,s as fe,Y as ve,_ as Ne,$ as we,A as ye,a0 as je,a1 as Le}from"./ui-vendor-D_fcl71Q.js";import{d as H}from"./apollo-vendor-8AJvV5pX.js";import"./react-vendor-DJG_os-6.js";const Me=({user:C})=>{const[N,I]=m.useState("level"),[g,$]=m.useState("all"),[y,Z]=m.useState(""),[A,W]=m.useState(""),[S,ee]=m.useState(1),[E,te]=m.useState("desc"),[U,se]=m.useState(100),{data:c,loading:T}=H(xe,{errorPolicy:"all",fetchPolicy:"cache-and-network"}),{data:b,loading:R}=H(be,{errorPolicy:"all",fetchPolicy:"cache-and-network"}),{data:h,loading:P}=H(ge,{errorPolicy:"all",fetchPolicy:"cache-and-network"}),_=m.useMemo(()=>{const s=(h?.label||[]).filter(r=>r.name.toLowerCase().includes("cohort")).map(r=>{const a=r.name.toLowerCase();let l=r.name;return a.includes("cohort4")||a.includes("cohort-4")?l="Cohort 4":a.includes("cohort1")?l="Cohort 1":a.includes("cohort2")?l="Cohort 2":a.includes("cohort3")&&(l="Cohort 3"),{id:r.id,name:l,description:r.description||""}}).filter((r,a,l)=>l.findIndex(i=>i.name===r.name)===a);return console.log("=== COHORT LABELS DETECTED ==="),console.log("Available cohort labels (normalized):",s.map(r=>r.name)),console.log("Total unique cohort labels found:",s.length),s},[h?.label]),q=m.useMemo(()=>{const t=new Map;return console.log("=== DYNAMIC EVENT TO COHORT MAPPING ==="),h?.label&&(console.log("Processing labels for event ID extraction:",h.label.length),h.label.forEach(o=>{const s=o.name.toLowerCase(),r=o.description||"";if(!s.includes("cohort"))return;console.log(`Processing cohort label: "${o.name}" with description: "${r}"`);const a=[/module #(\d+)/i,/event #(\d+)/i,/event (\d+)/i,/#(\d+)/i,/id:?\s*(\d+)/i];let l=null;for(const i of a){const d=r.match(i);if(d){l=parseInt(d[1],10),console.log(`Found event ID ${l} using pattern: ${i}`);break}}if(l){let i=o.name;s.includes("cohort4")||s.includes("cohort-4")?i="Cohort 4":s.includes("cohort1")?i="Cohort 1":s.includes("cohort2")?i="Cohort 2":s.includes("cohort3")&&(i="Cohort 3"),t.set(l,i),console.log(`✅ Dynamic mapping: Event ${l} → ${i} (from label: ${o.name})`)}else console.log(`⚠️  No event ID found in description for label: ${o.name}`)})),t.size===0?(console.warn("❌ No event-to-cohort mappings found from label descriptions"),console.log("Available labels:",h?.label?.map(o=>({name:o.name,desc:o.description})))):console.log(`✅ Successfully created ${t.size} dynamic event-to-cohort mappings`),console.log("Final dynamic event-to-cohort mapping:",Object.fromEntries(t)),t},[h?.label]),D=m.useMemo(()=>{const t=new Map,o=b?.label_user||[],s=c?.userLabels||[],r=[...o,...s];console.log("=== LABEL MAPPING DEBUG ==="),console.log("Raw label data from labelData:",o.length),console.log("Raw label data from comprehensiveData:",s.length),console.log("Combined label_user records found:",r.length),r.forEach(l=>{if(l.label?.name?.toLowerCase().includes("cohort")){const i=l.userId;t.has(i)||t.set(i,[]);const d=l.label,n=d.name.toLowerCase();let u=d.name;n.includes("cohort4")||n.includes("cohort-4")?u="Cohort 4":n.includes("cohort1")?u="Cohort 1":n.includes("cohort2")?u="Cohort 2":n.includes("cohort3")&&(u="Cohort 3");const w={...l,label:{...d,name:u}};t.get(i).push(w),console.log(`User ${i} has DIRECT cohort label: ${u} (original: ${d.name})`)}});const a=c?.allEventUsers||[];return console.log(`Processing ${a.length} event users for synthetic cohort labels`),a.forEach(l=>{const i=l.userId,d=l.eventId,n=q.get(d);if(n&&i)if(t.has(i)||t.set(i,[]),(t.get(i)||[]).some(v=>v.label.name===n))console.log(`User ${i} already has cohort label: ${n} - skipping synthetic label`);else{const v={id:d*1e6+i,userId:i,labelId:d,label:{id:d,name:n,description:`Cohort based on Event ${d} participation`}};t.get(i).push(v),console.log(`User ${i} gets EVENT-BASED cohort label: ${n} (from Event ${d})`)}}),t.forEach((l,i)=>{const d=new Set,n=l.filter(u=>{const w=u.label.name;return d.has(w)?(console.log(`Removing duplicate cohort label "${w}" for user ${i}`),!1):(d.add(w),!0)});t.set(i,n)}),console.log("Created user cohort labels map with",t.size,"users having cohort labels"),console.log("Sample users with cohort labels:",Array.from(t.keys()).slice(0,10)),t},[b?.label_user,c?.userLabels,c?.allEventUsers,q]);de.useEffect(()=>{console.log("=== LEADERBOARD QUERY DEBUG ==="),console.log("Comprehensive Loading:",T),console.log("Label Loading:",R),console.log("All Labels Loading:",P),console.log("Comprehensive Data exists:",!!c),console.log("Label Data exists:",!!b),console.log("All Labels Data exists:",!!h),c&&console.log("BH Module Users:",c.bhModuleUsers?.length||0),b&&console.log("Label Users from dedicated query:",b.label_user?.length||0),h&&(console.log("All available labels:",h.label?.length||0),console.log("Label names:",h.label?.map(s=>s.name)||[]));const o=localStorage.getItem("auth_token")?.includes("mock-dev-token");console.log("Authentication mode:",o?"Mock/Test Mode":"Real API Mode")},[T,c,R,b,P,h]);const M=T||R||P,ae=!c&&!M,p=m.useMemo(()=>{if(!c?.bhModuleUsers)return console.log("Missing comprehensive data:",{comprehensiveData:!!c,bhModuleUsers:!!c?.bhModuleUsers}),[];console.log("=== PROCESSING USERS WITH REAL LABEL DATA ==="),console.log("BH Module Users Count:",c.bhModuleUsers?.length),console.log("Total User Labels Available:",b?.label_user?.length||c.userLabels?.length||0),console.log("Label Data Source:",b?.label_user?"Dedicated Query":"Comprehensive Query");const t=new Map,o=new Map;return c.allUsersWithEvents&&(c.allUsersWithEvents.forEach(s=>{t.set(s.id,s)}),console.log("✅ Processed",c.allUsersWithEvents.length,"users")),c.publicUsers&&c.publicUsers.forEach(s=>{o.set(s.id,s)}),c.bhModuleUsers.map((s,r)=>{const a=s.userId,l=s.userLogin,i=s.userName,d=Number(s.userAuditRatio)||0;if(!a)return console.log("No valid userId found:",a),null;r<5&&console.log(`User ${a} (${l}/${i}) has audit ratio: ${d} from event_user`);let n=t.get(a),u="allUsers";n||(n=o.get(a),u="publicUsers");const v=(D.get(a)||[]).filter(L=>L.label?.name?.toLowerCase().includes("cohort")),j=v.map(L=>L.label.name);let z="No Cohort";j.length>0&&(z=j[0]);const X=v;if(!n){r<5&&console.log("No additional user data found for userId:",a);const L=i?i.split(" "):[];return{id:a,login:l||`user_${a}`,firstName:L[0]||"",lastName:L.slice(1).join(" ")||"",profile:"",attrs:{},auditRatio:d,totalUp:0,totalDown:0,level:s.level||0,totalXP:0,cohort:z,eventPath:"/bahrain/bh-module",createdAt:s.createdAt,rank:r+1,userLabels:X,labelNames:j}}return r<5&&console.log(`Found ${u} data for userId ${a}:`,n),r<10&&(console.log(`User ${a} (${l}) has ${v.length} cohort labels:`,j),r<3&&(console.log(`  - userLabelsMap has user ${a}:`,D.has(a)),console.log(`  - Raw cohort label data for user ${a}:`,v))),{id:a,login:n.login||l||`user_${a}`,firstName:n.firstName||"",lastName:n.lastName||"",profile:n.profile||"",attrs:n.attrs||{},auditRatio:d,totalUp:n.totalUp||0,totalDown:n.totalDown||0,level:s.level||0,totalXP:n.totalUp||0,cohort:z,eventPath:"/bahrain/bh-module",createdAt:n.createdAt||s.createdAt,rank:r+1,userLabels:X,labelNames:j}}).filter(Boolean)},[c,D,b]),le=m.useMemo(()=>{const t=new Set(["all"]);p.forEach(s=>{s.labelNames&&s.labelNames.length>0&&s.labelNames.forEach(r=>{t.add(r)}),s.cohort&&s.cohort!=="No Cohort"&&t.add(s.cohort)});const o=Array.from(t).sort();return console.log("Available cohorts for filtering (from real labels only):",o),o},[p]),f=m.useMemo(()=>{console.log("Processing users for filtering. Total processed users:",p.length);let t=[...p];g!=="all"&&(t=t.filter(s=>s.labelNames?.includes(g)||s.cohort===g)),y&&(t=t.filter(s=>s.login.toLowerCase().includes(y.toLowerCase())||s.firstName?.toLowerCase().includes(y.toLowerCase())||s.lastName?.toLowerCase().includes(y.toLowerCase()))),A&&(t=t.filter(s=>(s.userLabels?.filter(a=>a.label.name.toLowerCase().includes("cohort"))||[]).some(a=>a.label.name.toLowerCase().includes(A.toLowerCase()))||s.cohort?.toLowerCase().includes(A.toLowerCase()))),S>1&&(t=t.filter(s=>(s.level||0)>=S)),t.sort((s,r)=>{let a,l;switch(N){case"level":a=s.level||0,l=r.level||0;break;case"audit":a=Number(s.auditRatio)||0,l=Number(r.auditRatio)||0;break;default:a=s.level||0,l=r.level||0}return E==="desc"?l-a:a-l});const o=t.map((s,r)=>({...s,rank:r+1}));return console.log("Final filtered and sorted users:",o.length),o},[p,g,y,A,S,N,E]),O=m.useMemo(()=>{const t=f.findIndex(o=>o.id===C.id);return t>=0?t+1:null},[f,C.id]),k=c?.bhModuleStats?.aggregate?.count||p.length,oe=c?.bhModuleStats?.aggregate?.max?.level||Math.max(...p.map(t=>t.level||0),0),re=c?.bhModuleStats?.aggregate?.avg?.level||p.reduce((t,o)=>t+(o.level||0),0)/Math.max(k,1),ie=p.reduce((t,o)=>t+(Number(o.auditRatio)||0),0)/Math.max(k,1),V=t=>t==="all"?"All Cohorts":t.charAt(0).toUpperCase()+t.slice(1),Y=t=>{switch(t){case 1:return e.jsx(Le,{className:"w-5 h-5 text-yellow-400"});case 2:return e.jsx(je,{className:"w-5 h-5 text-gray-300"});case 3:return e.jsx(ye,{className:"w-5 h-5 text-amber-600"});default:return e.jsxs("span",{className:"text-white/60 font-bold",children:["#",t]})}},ne=t=>{switch(t){case 1:return"bg-gradient-to-r from-yellow-500/20 to-yellow-600/20 border-yellow-500/30";case 2:return"bg-gradient-to-r from-gray-400/20 to-gray-500/20 border-gray-400/30";case 3:return"bg-gradient-to-r from-amber-600/20 to-amber-700/20 border-amber-600/30";default:return"bg-white/5 border-white/10"}},Q=()=>{const t=g!=="all"?` - ${V(g)}`:"";switch(N){case"level":return`Level Rankings${t}`;case"audit":return`Audit Ratio Rankings${t}`;default:return`Leaderboard${t}`}},ce=t=>{switch(N){case"level":return{value:`Level ${t.level||0}`,subValue:""};case"audit":return{value:(Number(t.auditRatio)||0).toFixed(1),subValue:""};default:return{value:`${t.level||0}`,subValue:""}}};return M?e.jsx(me,{}):ae?e.jsx(J,{className:"p-6",children:e.jsxs("div",{className:"text-center text-red-400",children:[e.jsx("p",{children:"Error loading leaderboard data"}),e.jsx("p",{className:"text-sm text-white/60 mt-2",children:"Unable to load required data"})]})}):e.jsxs("div",{className:"bg-gradient-to-br from-slate-900 via-blue-900/20 to-slate-900 min-h-full relative",children:[e.jsxs("div",{className:"fixed inset-0 opacity-30 pointer-events-none z-0",children:[e.jsx("div",{className:"absolute inset-0 bg-gradient-to-r from-blue-500/5 to-purple-500/5"}),e.jsx("div",{className:"absolute inset-0",style:{backgroundImage:"radial-gradient(circle at 40px 40px, rgba(59, 130, 246, 0.1) 2px, transparent 0)",backgroundSize:"80px 80px"}})]}),e.jsxs("div",{className:"relative z-10 space-y-8 p-6",children:[(b?.label_user?.length||0)<=1&&!R&&e.jsx(x.div,{initial:{opacity:0,y:-10},animate:{opacity:1,y:0},className:"bg-amber-500/10 border border-amber-500/20 rounded-xl p-4 mb-4",children:e.jsxs("div",{className:"flex items-center space-x-3",children:[e.jsx("div",{className:"w-2 h-2 bg-amber-400 rounded-full animate-pulse"}),e.jsxs("div",{className:"flex-1",children:[e.jsx("p",{className:"text-amber-200 text-sm font-medium",children:"Label Access Limited"}),e.jsxs("p",{className:"text-amber-100/70 text-xs mt-1",children:["Only ",b?.label_user?.length||0,' label assignment(s) accessible. Users may show "No labels" due to database permissions.']})]})]})}),e.jsxs(x.div,{initial:{opacity:0,y:-20},animate:{opacity:1,y:0},transition:{duration:.6},className:"text-center space-y-4",children:[e.jsx("div",{className:"inline-flex items-center justify-center w-20 h-20 bg-gradient-to-r from-blue-500/20 to-purple-500/20 rounded-full backdrop-blur-sm border border-white/10 mb-4",children:e.jsx(B,{className:"w-10 h-10 text-blue-400"})}),e.jsx("h1",{className:"text-5xl font-bold bg-gradient-to-r from-white via-blue-100 to-purple-100 bg-clip-text text-transparent",children:"Leaderboard"}),e.jsxs("p",{className:"text-xl text-white/70 max-w-2xl mx-auto",children:["Rankings for ",e.jsx("span",{className:"text-blue-400 font-semibold",children:k})," Students"]})]}),e.jsxs(x.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5,delay:.1},className:"grid grid-cols-1 md:grid-cols-3 gap-6",children:[e.jsx(G,{icon:F,title:"Total Students",value:k.toLocaleString(),color:"from-blue-500/30 to-cyan-500/30",subValue:"Participants"}),e.jsx(G,{icon:pe,title:"Average Level",value:re.toFixed(1),color:"from-green-500/30 to-emerald-500/30",subValue:`Max: ${oe}`}),e.jsx(G,{icon:K,title:"Avg Audit Ratio",value:ie.toFixed(2),color:"from-orange-500/30 to-red-500/30",subValue:"Community contribution"})]}),e.jsxs(x.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5,delay:.15},className:"bg-white/5 backdrop-blur-sm rounded-2xl p-6 border border-white/10",children:[e.jsxs("div",{className:"flex items-center space-x-3 mb-4",children:[e.jsx("div",{className:"p-2 bg-cyan-500/20 rounded-lg",children:e.jsx(F,{className:"w-5 h-5 text-cyan-400"})}),e.jsxs("div",{children:[e.jsx("h3",{className:"text-lg font-semibold text-white",children:"Available Cohort Labels"}),e.jsx("p",{className:"text-sm text-white/60",children:"Dynamic cohort detection from database"})]})]}),e.jsx("div",{className:"flex flex-wrap gap-2",children:_.length>0?_.map((t,o)=>e.jsx(x.span,{initial:{opacity:0,scale:.8},animate:{opacity:1,scale:1},transition:{delay:o*.05},className:"px-3 py-1.5 bg-cyan-500/20 text-cyan-300 rounded-lg text-sm font-medium border border-cyan-500/30 hover:bg-cyan-500/30 transition-colors cursor-pointer",title:t.description,onClick:()=>W(t.name),children:t.name},t.id)):e.jsxs("div",{className:"flex items-center space-x-2 text-amber-400",children:[e.jsx("div",{className:"w-2 h-2 bg-amber-400 rounded-full animate-pulse"}),e.jsx("span",{className:"text-sm",children:"No cohort labels detected or limited database access"})]})}),_.length>0&&e.jsx("p",{className:"text-xs text-white/50 mt-3",children:"💡 Click on a cohort label to search for users with that label"})]}),e.jsx(x.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5,delay:.2},className:"flex flex-wrap gap-2 justify-center",children:[{key:"level",label:"📊 Level Rankings",icon:fe},{key:"audit",label:"⚖️ Audit Rankings",icon:K}].map(({key:t,label:o,icon:s})=>e.jsxs("button",{onClick:()=>I(t),className:`flex items-center space-x-2 px-4 py-2 rounded-lg transition-all ${N===t?"bg-primary-500 text-white shadow-lg":"bg-white/10 text-white/70 hover:bg-white/20 hover:text-white"}`,children:[e.jsx(s,{className:"w-4 h-4"}),e.jsx("span",{className:"text-sm font-medium",children:o})]},t))}),e.jsx(x.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5,delay:.3},className:"space-y-4",children:e.jsxs("div",{className:"flex flex-col sm:flex-row gap-4 items-center justify-between",children:[e.jsxs("div",{className:"relative flex-1 max-w-md",children:[e.jsx(ve,{className:"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/50 w-4 h-4"}),e.jsx("input",{type:"text",placeholder:"Search users by login, name...",value:y,onChange:t=>Z(t.target.value),className:"w-full pl-10 pr-4 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-primary-500"})]}),e.jsxs("div",{className:"relative flex-1 max-w-md",children:[e.jsx(F,{className:"absolute left-3 top-1/2 transform -translate-y-1/2 text-white/50 w-4 h-4"}),e.jsx("input",{type:"text",placeholder:"Search cohort labels (e.g., Cohort1, Cohort4-SP9)...",value:A,onChange:t=>W(t.target.value),className:"w-full pl-10 pr-4 py-2 bg-white/10 border border-white/20 rounded-lg text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-cyan-500"})]}),e.jsxs("div",{className:"flex items-center space-x-3",children:[e.jsx("select",{value:g,onChange:t=>$(t.target.value),className:"bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500",children:le.map(t=>e.jsx("option",{value:t,children:V(t)},t))}),e.jsxs("select",{value:S,onChange:t=>ee(Number(t.target.value)),className:"bg-white/10 border border-white/20 rounded-lg px-3 py-2 text-white focus:outline-none focus:ring-2 focus:ring-primary-500",children:[e.jsx("option",{value:1,children:"All Levels"}),e.jsx("option",{value:5,children:"Level 5+"}),e.jsx("option",{value:10,children:"Level 10+"}),e.jsx("option",{value:15,children:"Level 15+"}),e.jsx("option",{value:20,children:"Level 20+"}),e.jsx("option",{value:25,children:"Level 25+"})]}),e.jsxs("button",{onClick:()=>te(E==="desc"?"asc":"desc"),className:"flex items-center space-x-2 px-3 py-2 bg-white/10 hover:bg-white/20 border border-white/20 rounded-lg text-white transition-all",children:[E==="desc"?e.jsx(Ne,{className:"w-4 h-4"}):e.jsx(we,{className:"w-4 h-4"}),e.jsx("span",{className:"text-sm",children:E==="desc"?"High to Low":"Low to High"})]})]})]})}),O&&e.jsx(x.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5,delay:.4},children:e.jsx(J,{className:"p-4 bg-gradient-to-r from-primary-500/10 to-primary-600/10 border border-primary-500/20",children:e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{className:"flex items-center space-x-3",children:[Y(O),e.jsxs("div",{children:[e.jsx("p",{className:"text-white font-medium",children:"Your Current Position"}),e.jsx("p",{className:"text-white/60 text-sm",children:Q()})]})]}),e.jsxs("div",{className:"text-right",children:[e.jsxs("p",{className:"text-2xl font-bold text-primary-400",children:["#",O]}),e.jsxs("p",{className:"text-white/60 text-sm",children:["of ",f.length]})]})]})})}),e.jsxs(x.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5,delay:.5},className:"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20",children:[e.jsxs("div",{className:"flex items-center justify-between mb-6",children:[e.jsxs("h3",{className:"text-lg font-semibold text-white flex items-center",children:[e.jsx(B,{className:"w-5 h-5 mr-2 text-primary-400"}),Q(),e.jsxs("span",{className:"ml-2 text-primary-400",children:["(",f.length,")"]})]}),e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsx("span",{className:"text-white/60 text-sm",children:"Show:"}),e.jsxs("select",{value:U,onChange:t=>se(Number(t.target.value)),className:"bg-white/10 border border-white/20 rounded px-2 py-1 text-white text-sm focus:outline-none focus:ring-1 focus:ring-primary-500",children:[e.jsx("option",{value:50,children:"50"}),e.jsx("option",{value:100,children:"100"}),e.jsx("option",{value:200,children:"200"}),e.jsx("option",{value:500,children:"500"})]})]})]}),e.jsxs("div",{className:"space-y-2 max-h-96 overflow-y-auto",children:[f.slice(0,U).map((t,o)=>{const s=t.rank||o+1,r=t.id===C.id,a=ce(t);return e.jsxs(x.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{delay:o*.02},className:`flex items-center justify-between p-3 rounded-lg border transition-all ${r?"bg-primary-500/20 border-primary-500/30 ring-1 ring-primary-500/20":ne(s)}`,children:[e.jsxs("div",{className:"flex items-center space-x-3",children:[e.jsx("div",{className:"flex items-center justify-center w-8 h-8",children:Y(s)}),e.jsx(he,{user:t,size:"sm",className:"w-8 h-8"}),e.jsxs("div",{className:"flex-1",children:[e.jsxs("div",{className:"flex items-center space-x-2",children:[e.jsxs("div",{className:"flex flex-col",children:[e.jsx("h4",{className:"text-white font-medium",children:t.firstName&&t.lastName?`${t.firstName} ${t.lastName}`:t.login}),t.firstName&&t.lastName&&e.jsxs("span",{className:"text-xs text-white/60",children:["@",t.login]})]}),r&&e.jsx("span",{className:"px-2 py-1 bg-primary-500/20 text-primary-400 rounded text-xs font-medium",children:"You"})]}),(console.log(`Rendering user ${t.login} with ${t.userLabels?.length||0} COHORT labels:`,t.userLabels?.map(l=>l.label.name)),null),e.jsxs("div",{className:"flex items-center space-x-2 text-xs text-white/60 mt-1",children:[t.userLabels&&t.userLabels.length>0&&e.jsx("div",{className:"flex flex-wrap gap-1",children:t.userLabels.map((l,i)=>e.jsxs("span",{className:"px-1.5 py-0.5 bg-cyan-400/20 text-cyan-400 rounded text-xs font-medium border border-cyan-400/30",title:`Cohort Label: ${l.label.name}`,children:["🏷️ ",l.label.name]},l.id||i))}),(!t.userLabels||t.userLabels.length===0)&&e.jsx("span",{className:"text-amber-400 text-xs",children:"No cohort labels"}),e.jsxs("span",{className:"ml-auto",children:["Joined ",ue(t.createdAt)]})]})]})]}),e.jsxs("div",{className:"text-right",children:[e.jsx("div",{className:"text-lg font-bold text-white",children:a.value}),e.jsx("div",{className:"text-xs text-white/60",children:a.subValue})]})]},t.id)}),f.length>U&&e.jsx("div",{className:"text-center py-4",children:e.jsxs("p",{className:"text-white/60 text-sm",children:["Showing ",U," of ",f.length," users"]})})]})]}),M&&e.jsx("div",{className:"bg-white/10 backdrop-blur-lg rounded-xl p-6 border border-white/20",children:e.jsxs("div",{className:"flex items-center justify-center py-8",children:[e.jsx("div",{className:"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-500"}),e.jsx("span",{className:"ml-3 text-white/70",children:"Loading leaderboard data..."})]})}),f.length===0&&!M&&e.jsxs(x.div,{initial:{opacity:0},animate:{opacity:1},className:"text-center py-12",children:[e.jsx(B,{className:"w-16 h-16 text-white/30 mx-auto mb-4"}),e.jsx("h3",{className:"text-white/70 text-lg font-medium mb-2",children:"No users found"}),e.jsx("p",{className:"text-white/50",children:"Try adjusting your search criteria or filters."})]})]})]})},G=({icon:C,title:N,value:I,color:g,subValue:$})=>e.jsxs(x.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},className:`bg-gradient-to-br ${g} backdrop-blur-lg rounded-2xl p-6 border border-white/10 hover:border-white/20 transition-all duration-300 hover:transform hover:scale-105 shadow-lg hover:shadow-xl`,children:[e.jsx("div",{className:"flex items-center justify-between mb-4",children:e.jsx("div",{className:"p-3 rounded-xl bg-white/20 backdrop-blur-sm",children:e.jsx(C,{className:"w-8 h-8 text-white drop-shadow-lg"})})}),e.jsx("h3",{className:"text-3xl font-bold text-white mb-2 tracking-tight",children:I}),e.jsx("p",{className:"text-white/70 text-sm font-medium",children:N}),$&&e.jsx("p",{className:"text-white/50 text-xs mt-2 bg-white/5 rounded-lg px-2 py-1",children:$})]});export{Me as default};
