{
  "description": "Database Relations and Entity Relationship Diagram (ERD) for the school platform",
  "cardinality_info": {
    "description": "Relationships have a cardinality with two indicators on both sides of the line",
    "indicators": [
      "Max number of times that an instance of one entity can be associated with instances in the related entity (one, many, or none)",
      "Min number of times one instance can be related to others (zero or mandatory)"
    ]
  },
  "relations": {
    "events": {
      "description": "Events will be the accumulation of event, registration, registration_user, event_user tables. This part of the database takes care of schools activities with time.",
      "tables": ["event", "registration", "registration_user", "event_user"],
      "relationships": {
        "event": {
          "parentId": {
            "type": "self_reference",
            "description": "Associated to himself. An event can be based on a parent event (ex: /madere/div-01/piscine-rust is associated to parent event /madere/div-01)",
            "cardinality": "one_to_many"
          },
          "registrationId": {
            "type": "one_to_one",
            "target_table": "registration",
            "description": "An event must always have a registration associated to it"
          },
          "objectId": {
            "type": "many_to_one",
            "target_table": "object",
            "description": "Identifies which object is associated to which event. An object can have multiple events, but an event must always be associated to an object"
          }
        },
        "event_user": {
          "type": "many_to_many",
          "description": "Contains associations between events and users. An event can have multiple users and a user can have multiple events",
          "userId": {
            "target_table": "user",
            "cardinality": "many_to_many"
          },
          "eventId": {
            "target_table": "event",
            "cardinality": "many_to_many"
          }
        },
        "registration": {
          "parentId": {
            "type": "self_reference",
            "description": "Associated to himself, same use as in events"
          },
          "objectId": {
            "type": "many_to_one",
            "target_table": "object",
            "description": "Object reference to the registrations"
          }
        },
        "registration_user": {
          "type": "many_to_many",
          "description": "Relationship between registration and user. Contains all users that are registered to an event",
          "registrationId": {
            "target_table": "registration",
            "description": "A registration can have multiple users"
          },
          "userId": {
            "target_table": "user",
            "description": "A user can have multiple registrations"
          }
        }
      }
    },
    "objects": {
      "description": "Object will be the accumulation of object, object_child, object_status, object_type tables. This part of the database defines the structure of the content.",
      "tables": ["object", "object_child", "object_status", "object_type"],
      "relationships": {
        "object": {
          "referenceId": {
            "type": "self_reference",
            "description": "Associated to himself, allows duplication of reference objects (given by 01-edu), used to set up campuses"
          },
          "authorId": {
            "type": "many_to_one",
            "target_table": "user",
            "description": "The author of that object/content"
          }
        },
        "object_child": {
          "description": "Contains the encapsulation of objects. An object can have multiple children and a child must have one object parent",
          "parentId": {
            "type": "many_to_one",
            "target_table": "object",
            "description": "Associates the parent object to the child object"
          },
          "childId": {
            "type": "many_to_one",
            "target_table": "object",
            "description": "Belongs to the parent object"
          },
          "note": "Both child and parent must have at least one association to the object table, and the object table can have multiple relations with the object_child table"
        }
      },
      "example": "Campus 'madeira' is a parent object of 'piscine-go', therefore the later one is the child. But 'piscine-go' can be the parent object of all the quest, exams and raids (those being the child objects). And so onâ€¦ creating a finite cycle."
    },
    "users": {
      "description": "Users will be the accumulation of role, user_role, user, group, group_user, token, record, transaction tables",
      "tables": ["role", "user_role", "user", "group", "group_user", "token", "record", "transaction"],
      "relationships": {
        "user_role": {
          "type": "many_to_many",
          "description": "Contains information on which users are associated to which role. A user can have multiple roles and a role can be associated to multiple users",
          "userId": {
            "target_table": "user"
          },
          "roleId": {
            "target_table": "role"
          }
        },
        "group": {
          "eventId": {
            "type": "many_to_one",
            "target_table": "event",
            "description": "Associates which group is related to which event"
          },
          "captainId": {
            "type": "many_to_one",
            "target_table": "user",
            "description": "Associates the captain's user"
          },
          "objectId": {
            "type": "many_to_one",
            "target_table": "object",
            "description": "Associates which group is related to which object"
          }
        },
        "group_user": {
          "type": "many_to_many",
          "description": "Contains the relation between groups and users. A group can have several users and so do the users",
          "groupId": {
            "target_table": "group"
          },
          "userId": {
            "target_table": "user"
          }
        },
        "token": {
          "description": "Stores the tokens ids from the hasura authorization variables for each user. This table has no relation between other tables"
        },
        "record": {
          "description": "Takes care of students records (bans). All relations in this table are with the table user",
          "userId": {
            "target_table": "user"
          },
          "authorId": {
            "target_table": "user"
          }
        },
        "transaction": {
          "description": "Takes care of rewarding the user, by accumulating the user's xp, up and down",
          "userId": {
            "type": "many_to_one",
            "target_table": "user",
            "description": "Represents the user rewarded"
          },
          "eventId": {
            "type": "many_to_one",
            "target_table": "event",
            "description": "Associates the event in which the user was rewarded"
          },
          "objectId": {
            "type": "many_to_one",
            "target_table": "object",
            "description": "Associates the object in which the user was rewarded"
          }
        }
      },
      "results": {
        "description": "Results will be the accumulation of audit, match, progress, result tables. This part of the database defines the users/students progress in the school.",
        "tables": ["audit", "match", "progress", "result"],
        "relationships": {
          "audit": {
            "description": "Contains all information related to the audit system and it is one of the ways of obtaining results",
            "groupId": {
              "type": "many_to_one",
              "target_table": "group",
              "description": "Associates the group being audited"
            },
            "auditorId": {
              "type": "many_to_one",
              "target_table": "user",
              "description": "Linked to the user table, this column will be the auditor"
            },
            "resultId": {
              "type": "one_to_many",
              "target_table": "result",
              "description": "Associates the audit to the result. An audit can have one or no results (pending on the auditor review). While the results must have at least one audit"
            }
          },
          "match": {
            "description": "Another way of obtaining a result. Used in bonus exercises to match two students",
            "userId": {
              "type": "many_to_one",
              "target_table": "user",
              "description": "The user wanting the match to happen"
            },
            "matchId": {
              "type": "self_reference",
              "description": "A match can be made by matching other students or it can be none. If none it means that the student is waiting for the match"
            },
            "eventId": {
              "type": "many_to_one",
              "target_table": "event",
              "description": "Associates the event to the current match"
            },
            "objectId": {
              "type": "many_to_one",
              "target_table": "object",
              "description": "Associates the object to the current match, this being the bonus exercise that the user is doing"
            }
          },
          "progress": {
            "description": "The reflection of user's activity on specific path: registration to an event related, commitment to a group associated to this path, generation of result expected to validate a progress on this path",
            "userId": {
              "type": "many_to_one",
              "target_table": "user",
              "description": "Associates an user with a progress. A progress must always have a user associate to it and a user can or cannot have multiple progresses"
            },
            "groupId": {
              "type": "many_to_one_optional",
              "target_table": "group",
              "description": "Allows each user form a group to have progress. A progress can have none or one group and a group can have multiple progresses"
            },
            "eventId": {
              "type": "many_to_one",
              "target_table": "event",
              "description": "Associates which event the user has progressed on"
            },
            "objectId": {
              "type": "many_to_one",
              "target_table": "object",
              "description": "Associates which object the user has progressed on"
            },
            "version": {
              "description": "The association between the progress and the result table"
            }
          },
          "result": {
            "description": "Keeps the track of students result",
            "userId": {
              "type": "many_to_one",
              "target_table": "user",
              "description": "Associates an user with a result. An user can have multiple results but a result is associated to just one user"
            },
            "groupId": {
              "type": "many_to_one",
              "target_table": "group",
              "description": "Associates a group with a result. Same logic as in the userId"
            },
            "objectId": {
              "type": "many_to_one",
              "target_table": "object",
              "description": "Associates an object with a result. A result must have always a object associated to it and an object can have multiple results"
            },
            "eventId": {
              "type": "many_to_one",
              "target_table": "event",
              "description": "Associates an event with a result. Same logic as in the objectId"
            }
          }
        }
      }
    }
  },
  "erd_diagram": {
    "description": "An entity relationship diagram (ERD) shows the relationships of entity and sets stored in a database. An entity in this context is a table, this table contains a set of attributes, they can be of any data structure (INT, TEXT, â€¦). An entity can have several relations to other entities. Those relations are represented with 'crow foots'"
  }
}
