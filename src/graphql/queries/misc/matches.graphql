# ============================================================================
# MATCH QUERIES
# Queries for match system (betting on exercises)
# ============================================================================

# Get match by ID
query GetMatchById($matchId: Int!) {
  match(where: { id: { _eq: $matchId } }) {
    id
    confirmed
    bet
    result
    createdAt
    updatedAt
    path
    campus
    # User who initiated the match
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Matched user
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Object/exercise being matched on
    object {
      id
      name
      type
      attrs
    }
    # Event context
    event {
      id
      path
      campus
      createdAt
      endAt
    }
  }
}

# Get matches for a user
query GetUserMatches($userLogin: String!, $limit: Int = 50) {
  match(
    where: { 
      _or: [
        { user: { login: { _eq: $userLogin } } }
        { match: { login: { _eq: $userLogin } } }
      ]
    }
    order_by: { createdAt: desc }
    limit: $limit
  ) {
    id
    confirmed
    bet
    result
    createdAt
    updatedAt
    path
    campus
    # User who initiated the match
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Matched user
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Object/exercise being matched on
    object {
      id
      name
      type
      attrs
    }
    # Event context
    event {
      id
      path
      campus
    }
  }
}

# Get pending matches (not confirmed)
query GetPendingMatches($limit: Int = 50) {
  match(
    where: { confirmed: { _eq: false } }
    order_by: { createdAt: desc }
    limit: $limit
  ) {
    id
    confirmed
    bet
    result
    createdAt
    updatedAt
    path
    campus
    # User who initiated the match
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Matched user
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Object/exercise being matched on
    object {
      id
      name
      type
      attrs
    }
    # Event context
    event {
      id
      path
      campus
    }
  }
}

# Get confirmed matches
query GetConfirmedMatches($limit: Int = 100, $offset: Int = 0) {
  match(
    where: { confirmed: { _eq: true } }
    order_by: { createdAt: desc }
    limit: $limit
    offset: $offset
  ) {
    id
    confirmed
    bet
    result
    createdAt
    updatedAt
    path
    campus
    # User who initiated the match
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Matched user
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Object/exercise being matched on
    object {
      id
      name
      type
      attrs
    }
    # Event context
    event {
      id
      path
      campus
    }
  }
}

# Get matches by object
query GetMatchesByObject($objectId: Int!, $limit: Int = 50) {
  match(
    where: { objectId: { _eq: $objectId } }
    order_by: { createdAt: desc }
    limit: $limit
  ) {
    id
    confirmed
    bet
    result
    createdAt
    updatedAt
    path
    campus
    # User who initiated the match
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Matched user
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Event context
    event {
      id
      path
      campus
    }
  }
}

# Get matches by event
query GetMatchesByEvent($eventId: Int!, $limit: Int = 50) {
  match(
    where: { eventId: { _eq: $eventId } }
    order_by: { createdAt: desc }
    limit: $limit
  ) {
    id
    confirmed
    bet
    result
    createdAt
    updatedAt
    path
    campus
    # User who initiated the match
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Matched user
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Object/exercise being matched on
    object {
      id
      name
      type
      attrs
    }
  }
}

# Get matches by campus
query GetMatchesByCampus($campus: String!, $limit: Int = 100) {
  match(
    where: { campus: { _eq: $campus } }
    order_by: { createdAt: desc }
    limit: $limit
  ) {
    id
    confirmed
    bet
    result
    createdAt
    updatedAt
    path
    campus
    # User who initiated the match
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Matched user
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Object/exercise being matched on
    object {
      id
      name
      type
      attrs
    }
    # Event context
    event {
      id
      path
      campus
    }
  }
}

# Get successful bets (result = true)
query GetSuccessfulBets($limit: Int = 50) {
  match(
    where: { 
      _and: [
        { confirmed: { _eq: true } }
        { result: { _eq: true } }
      ]
    }
    order_by: { updatedAt: desc }
    limit: $limit
  ) {
    id
    confirmed
    bet
    result
    createdAt
    updatedAt
    path
    campus
    # User who initiated the match
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Matched user
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Object/exercise being matched on
    object {
      id
      name
      type
      attrs
    }
  }
}

# Get failed bets (result = false)
query GetFailedBets($limit: Int = 50) {
  match(
    where: { 
      _and: [
        { confirmed: { _eq: true } }
        { result: { _eq: false } }
      ]
    }
    order_by: { updatedAt: desc }
    limit: $limit
  ) {
    id
    confirmed
    bet
    result
    createdAt
    updatedAt
    path
    campus
    # User who initiated the match
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Matched user
    user {
      id
      login
      firstName
      lastName
      campus
    }
    # Object/exercise being matched on
    object {
      id
      name
      type
      attrs
    }
  }
}
