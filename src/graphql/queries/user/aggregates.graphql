# ============================================================================
# USER AGGREGATE QUERIES
# Statistical and aggregate queries for user data
# ============================================================================

# Get user statistics aggregates
query GetUserStatistics {
  user_aggregate {
    aggregate {
      count
      avg {
        auditRatio
        totalUp
        totalDown
      }
      max {
        auditRatio
        totalUp
        totalDown
        createdAt
      }
      min {
        auditRatio
        totalUp
        totalDown
        createdAt
      }
      stddev {
        auditRatio
        totalUp
        totalDown
      }
    }
  }
}

# Get user statistics by campus
query GetUserStatsByCampus($campus: String!) {
  user_aggregate(where: { campus: { _eq: $campus } }) {
    aggregate {
      count
      avg {
        auditRatio
        totalUp
        totalDown
      }
      max {
        auditRatio
        totalUp
        totalDown
      }
      min {
        auditRatio
        totalUp
        totalDown
      }
    }
  }
}

# Get users with high audit ratios
query GetUsersWithHighAuditRatio($minRatio: float8 = 1.0, $limit: Int = 50) {
  user(
    where: { auditRatio: { _gte: $minRatio } }
    order_by: { auditRatio: desc }
    limit: $limit
  ) {
    id
    login
    firstName
    lastName
    auditRatio
    totalUp
    totalDown
    campus
  }
}

# Get users with most up votes
query GetUsersWithMostUpVotes($limit: Int = 50) {
  user(
    where: { totalUp: { _gt: 0 } }
    order_by: { totalUp: desc }
    limit: $limit
  ) {
    id
    login
    firstName
    lastName
    auditRatio
    totalUp
    totalDown
    campus
  }
}

# Get campus user distribution
query GetCampusUserDistribution {
  user(distinct_on: campus) {
    campus
  }
  user_aggregate {
    nodes {
      campus
    }
    aggregate {
      count
    }
  }
}

# Get user registration timeline
query GetUserRegistrationTimeline($startDate: timestamptz = "2020-01-01T00:00:00Z", $endDate: timestamptz = "2030-12-31T23:59:59Z") {
  user_aggregate(
    where: {
      createdAt: { _gte: $startDate, _lte: $endDate }
    }
  ) {
    nodes {
      createdAt
      campus
    }
    aggregate {
      count
    }
  }
}

# Get users by audit ratio range
query GetUsersByAuditRatioRange($minRatio: numeric!, $maxRatio: numeric!, $limit: Int = 100) {
  user(
    where: {
      auditRatio: { _gte: $minRatio, _lte: $maxRatio }
    }
    order_by: { auditRatio: desc }
    limit: $limit
  ) {
    id
    login
    firstName
    lastName
    auditRatio
    totalUp
    totalDown
    campus
    createdAt
  }
}

# Get user activity summary
query GetUserActivitySummary($userLogin: String!) {
  user(where: { login: { _eq: $userLogin } }) {
    id
    login
    firstName
    lastName
    auditRatio
    totalUp
    totalDown
    campus
    
    # Count of groups participated in
    group_users_aggregate {
      aggregate {
        count
      }
    }
    
    # Count of events participated in
    event_users_aggregate {
      aggregate {
        count
      }
    }
    
    # Count of registrations
    registration_users_aggregate {
      aggregate {
        count
      }
    }
    
    # Count of audits performed
    audits_as_auditor_aggregate: audits_aggregate(where: { auditor: { login: { _eq: $userLogin } } }) {
      aggregate {
        count
        avg {
          grade
        }
      }
    }
    
    # Count of matches
    matches_aggregate {
      aggregate {
        count
      }
    }
  }
}

# Get top users by various metrics
query GetTopUsersByMetrics($limit: Int = 20) {
  # Top by audit ratio
  top_by_audit_ratio: user(
    where: { auditRatio: { _gt: 0 } }
    order_by: { auditRatio: desc }
    limit: $limit
  ) {
    id
    login
    firstName
    lastName
    auditRatio
    campus
  }
  
  # Top by up votes
  top_by_up_votes: user(
    where: { totalUp: { _gt: 0 } }
    order_by: { totalUp: desc }
    limit: $limit
  ) {
    id
    login
    firstName
    lastName
    totalUp
    campus
  }
  
  # Most active (by total up + down)
  most_active: user(
    where: { 
      _and: [
        { totalUp: { _gt: 0 } }
        { totalDown: { _gt: 0 } }
      ]
    }
    order_by: [{ totalUp: desc }, { totalDown: desc }]
    limit: $limit
  ) {
    id
    login
    firstName
    lastName
    totalUp
    totalDown
    auditRatio
    campus
  }
}

# Get user comparison data
query GetUserComparison($userLogins: [String!]!) {
  user(where: { login: { _in: $userLogins } }) {
    id
    login
    firstName
    lastName
    auditRatio
    totalUp
    totalDown
    campus
    createdAt
    
    # Group participation count
    group_users_aggregate {
      aggregate {
        count
      }
    }
    
    # Event participation count
    event_users_aggregate {
      aggregate {
        count
      }
    }
    
    # Audit performance
    audits_as_auditor_aggregate: audits_aggregate(where: { auditor: { login: { _in: $userLogins } } }) {
      aggregate {
        count
        avg {
          grade
        }
      }
    }
  }
}
