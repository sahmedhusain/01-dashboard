# Import required fragments
#import "../fragments/user-fragments.graphql"
#import "../fragments/transaction-fragments.graphql"
#import "../fragments/object-fragments.graphql"
#import "../fragments/event-fragments.graphql"
#import "../fragments/registration-fragments.graphql"

# Enhanced XP Statistics Query with comprehensive data from introspection
query GetXPStatistics($userId: Int!, $campus: String = null) {
  # User basic info with audit metrics
  user(where: { id: { _eq: $userId } }) {
    ...UserInfo
    # Direct XP fields from user table
    totalUp
    totalDown
    totalUpBonus
    auditRatio
    auditsAssigned
  }

  # Total XP from transactions - amount is in bytes, divide by 1000 for KB
  totalXP: transaction_aggregate(
    where: {
      userId: { _eq: $userId }
      type: { _eq: "xp" }
      campus: { _eq: $campus }
    }
  ) {
    ...TransactionAggregateInfo
  }

  # XP by project with enhanced object and event data
  xpByProject: transaction(
    where: {
      userId: { _eq: $userId }
      type: { _eq: "xp" }
      object: { type: { _eq: "project" } }
      campus: { _eq: $campus }
    }
    order_by: { amount: desc }
    limit: 50
  ) {
    ...TransactionInfo
    # Enhanced object information
    object {
      ...ObjectInfo
      author {
        ...UserBasicInfo
      }
      reference {
        ...ObjectInfo
      }
    }
    # Enhanced event information
    event {
      ...EventInfo
      parent {
        ...EventInfo
      }
      object {
        ...ObjectInfo
      }
      registration {
        ...RegistrationInfo
      }
    }
  }

  # XP timeline for progression tracking with enhanced data
  xpTimeline: transaction(
    where: {
      userId: { _eq: $userId }
      type: { _eq: "xp" }
      campus: { _eq: $campus }
    }
    order_by: { createdAt: asc }
    limit: 200
  ) {
    ...TransactionInfo
    object {
      ...ObjectInfo
      author {
        ...UserBasicInfo
      }
    }
    event {
      ...EventInfo
      parent {
        ...EventInfo
      }
      object {
        ...ObjectInfo
      }
    }
  }
}
